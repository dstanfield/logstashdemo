<record reset="true">
  <package>com.microstrategy.web.objects</package>
  <level>SEVERE</level>
  <miliseconds>1546470796572</miliseconds>
  <timestamp>01/02/2019 18:13:16:574</timestamp>
  <thread>0</thread>
  <class>WebIServerSessionImpl</class>
  <method>initAuthInfo</method>
  <message>MSIXML : Server &quot;&quot; not connected. (com.microstrategy.web.objects.WebObjectsException)</message>
  <exception>com.microstrategy.web.objects.WebObjectsException: MSIXML : Server &quot;&quot; not connected.&#x0D;&#x0A;&#x09;at com.microstrategy.web.objects.WebIServerSessionImpl.initAuthInfo(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.objects.WebIServerSessionImpl.createNewSessionID(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.objects.WebSessionInfoImpl.getSessionID(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.objects.ServerDefBypassAclCache.load(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.utils.cache.CacheBase.get(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.app.beans.GlobalFeaturesImpl.isSessionRecoverySettingEnabled(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.app.beans.GlobalFeaturesImpl.resolveFeature(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.beans.AbstractWebFeatures.isFeatureAvailable(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.beans.AbstractWebComponent.isFeatureAvailable(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.app.taglibs.IfFeatureTagHelper.checkCondition(Unknown Source)&#x0D;&#x0A;</exception>
</record>
<record reset="true">
  <package>com.microstrategy.web.objects</package>
  <level>SEVERE</level>
  <miliseconds>1546474942283</miliseconds>
  <timestamp>01/02/2019 19:22:22:284</timestamp>
  <thread>0</thread>
  <class>WebIServerSessionImpl</class>
  <method>initAuthInfo</method>
  <message>MSIXML : Server &quot;&quot; not connected. (com.microstrategy.web.objects.WebObjectsException)</message>
  <exception>com.microstrategy.web.objects.WebObjectsException: MSIXML : Server &quot;&quot; not connected.&#x0D;&#x0A;&#x09;at com.microstrategy.web.objects.WebIServerSessionImpl.initAuthInfo(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.objects.WebIServerSessionImpl.createNewSessionID(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.objects.WebSessionInfoImpl.getSessionID(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.objects.ServerDefBypassAclCache.load(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.utils.cache.CacheBase.get(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.app.beans.GlobalFeaturesImpl.isSessionRecoverySettingEnabled(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.app.beans.GlobalFeaturesImpl.resolveFeature(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.beans.AbstractWebFeatures.isFeatureAvailable(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.beans.AbstractWebComponent.isFeatureAvailable(Unknown Source)&#x0D;&#x0A;&#x09;at com.microstrategy.web.app.taglibs.IfFeatureTagHelper.checkCondition(Unknown Source)&#x0D;&#x0A;</exception>
</record>


[2019-08-30T22:26:59,922][INFO ][logstash.setting.writabledirectory] Creating directory {:setting=>"path.queue", :path=>"/var/lib/logstash/queue"}
[2019-08-30T22:26:59,953][INFO ][logstash.setting.writabledirectory] Creating directory {:setting=>"path.dead_letter_queue", :path=>"/var/lib/logstash/dead_letter_queue"}
[2019-08-30T22:27:00,425][INFO ][logstash.runner          ] Starting Logstash {"logstash.version"=>"7.3.1"}
[2019-08-30T22:27:00,452][INFO ][logstash.agent           ] No persistent UUID file found. Generating new UUID {:uuid=>"f7614a3e-5e8a-4e88-9a44-e1810cfc107e", :path=>"/var/lib/logstash/uuid"}
[2019-08-30T22:27:01,852][ERROR][logstash.agent           ] Failed to execute action {:action=>LogStash::PipelineAction::Create/pipeline_id:main, :exception=>"LogStash::ConfigurationError", :message=>"Expected one of #, \", ', -, [, { at line 31, column 6 (byte 640) after filter\n{ \n  multiline {\n    pattern => \"<record\"\n    negate => \"true\"\n    what => \"next\"\n            }\n\n  xml {\n  \tstore_xml => \"false\"\n  \tsource => \"message\"\n    xpath => [\n     \"/record/package/text()\", \"package\",\n     \"/record/level/text()\", \"level\",\n     \"/record/miliseconds/text()\", \"miliseconds\",\n     \"/record/timestamp/text()\", \"timestamp\",\n
    \"/record/thread/text()\", \"thread\",\n     \"/record/class/text()\", \"class\",\n     \"/record/method/text()\", \"method\",\n     \"/record/message/text()\", \"message\",\n     \"/record/exception/text()\", \"exception\",\n     ", :backtrace=>["/usr/share/logstash/logstash-core/lib/logstash/compiler.rb:41:in `compile_imperative'", "/usr/share/logstash/logstash-core/lib/logstash/compiler.rb:49:in `compile_graph'", "/usr/share/logstash/logstash-core/lib/logstash/compiler.rb:11:in `block in compile_sources'", "org/jruby/RubyArray.java:2577:in `map'", "/usr/share/logstash/logstash-core/lib/logstash/compiler.rb:10:in `compile_sources'", "org/logstash/execution/AbstractPipelineExt.java:151:in `initialize'", "org/logstash/execution/JavaBasePipelineExt.java:47:in `initialize'", "/usr/share/logstash/logstash-core/lib/logstash/java_pipeline.rb:24:in `initialize'", "/usr/share/logstash/logstash-core/lib/logstash/pipeline_action/create.rb:36:in `execute'", "/usr/share/logstash/logstash-core/lib/logstash/agent.rb:325:in `block in converge_state'"]}
[2019-08-30T22:27:02,358][INFO ][logstash.agent           ] Successfully started Logstash API endpoint {:port=>9600}
[2019-08-30T22:27:07,242][INFO ][logstash.runner          ] Logstash shut down.